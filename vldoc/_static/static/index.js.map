{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../site/static/index.ts"],"names":[],"mappings":"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","sourcesContent":["\nimport {text} from 'd3-fetch';\nimport {event, select, selectAll, Selection} from 'd3-selection';\n// import * as hljs from 'highlight.js';\nimport * as vega from 'vega';\nimport {post} from 'vega-embed/build/post';\nimport {Handler} from 'vega-tooltip';\nimport {compile, TopLevelSpec} from '../../src';\nimport {runStreamingExample} from './streaming';\n\n\n\n// import {$} from 'jquery';\n\n\nwindow['runStreamingExample'] = runStreamingExample;\nwindow['embedExample'] = embedExample;\n\nconst BASEURL = 'https://vega.github.io/vega-lite/';\n\nconst loader = vega.loader({\n  baseURL: BASEURL\n});\n\nconst editorURL = 'https://vega.github.io/editor/';\n\n/* Documentation */\nfunction renderExample($target: Selection<any, any, any, any>, specText: string) {\n  $target.classed('example', true);\n  $target.text('');\n\n  const vis = $target.append('div').attr('class', 'example-vis');\n\n  // Decrease visual noise by removing $schema and description from code examples.\n  const textClean = specText.replace(/(\\s)+\\\"(\\$schema|description)\\\": \\\".*?\\\",/g, '');\n  const code = $target.append('pre').attr('class', 'example-code')\n  .append('code').attr('class', 'json').text(textClean);\n  // hljs.highlightBlock(code.node() as any);\n\n  const spec = JSON.parse(specText);\n\n  embedExample(vis.node(), spec, true, !$target.classed('no-tooltip'));\n}\n\nexport function embedExample($target: any, spec: TopLevelSpec, actions=true, tooltip=true) {\n  const vgSpec = compile(spec).spec;\n\n  const view = new vega.View(vega.parse(vgSpec), {loader: loader})\n    .renderer('svg')\n    .initialize($target);\n\n  if (tooltip) {\n    const handler = new Handler().call;\n    view.tooltip(handler);\n  }\n\n  view.run();\n\n  if (actions) {\n    select($target)\n      .append('div')\n      .attr('class', 'vega-actions')\n      .append('a')\n      .text('Open in Vega Editor')\n      .attr('href', '#')\n      .on('click', function () {\n        post(window, editorURL, {\n          mode: 'vega-lite',\n          spec: JSON.stringify(spec, null, 2),\n          config: vgSpec.config,\n          renderer: 'svg'\n        });\n        event.preventDefault();\n      });\n  }\n\n  return view;\n}\n\nfunction getSpec(el: d3.BaseType) {\n  const sel = select(el);\n  const name = sel.attr('data-name');\n  if (name) {\n    const dir = sel.attr('data-dir');\n    const fullUrl = BASEURL + '/examples/specs/' + (dir ? (dir + '/') : '') + name + '.vl.json';\n\n    text(fullUrl).then(spec => {\n      renderExample(sel, spec);\n    }).catch(console.error);\n  } else {\n    console.error('No \"data-name\" specified to import examples from');\n  }\n}\n\nwindow['changeSpec'] = function(elId: string, newSpec: string) {\n  const el = document.getElementById(elId);\n  select(el).attr('data-name', newSpec);\n  getSpec(el);\n};\n\nwindow['buildSpecOpts'] = function(id: string, baseName: string) {\n  const oldName = select('#' + id).attr('data-name');\n  const prefixSel = select('select[name=' + id + ']');\n  const inputsSel = selectAll('input[name=' + id + ']:checked');\n  const prefix = prefixSel.empty() ? id : prefixSel.property('value');\n  const values = inputsSel.nodes().map((n: any) => n.value).sort().join('_');\n  const newName = baseName + prefix + (values ? '_' + values : '');\n  if (oldName !== newName) {\n    window['changeSpec'](id, newName);\n  }\n};\n\nwindow['runVLexamples'] = function () {\n  selectAll('.vl-example').each(function(this: d3.BaseType) {\n    getSpec(this);\n  });\n};\n\nwindow['runVLexamples']();\n\n"]}