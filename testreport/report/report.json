{"natural_disasters": {"result": "no_pandas"}, "error_bars_with_ci": {"error": "Traceback (most recent call last):\n  File \"/Users/tim/PycharmProjects/altair_project/run_app.py\", line 24, in <module>\n    test_geopandas_examples(fn, rep_path)\n  File \"/Users/tim/PycharmProjects/altair_project/altair/altair/utils/tests/test_geo_examples.py\", line 202, in test_geopandas_examples\n    assert same_img\nAssertionError\n", "gpd_vl": "error_bars_with_ci_gpd.vl.json", "result": "different", "gpd_png": "error_bars_with_ci_gpd.png", "pd_vl": "error_bars_with_ci_pd.vl.json", "pd_png": "error_bars_with_ci_pd.png"}, "scatter_with_labels": {"gpd_png": "scatter_with_labels_gpd.png", "pd_vl": "scatter_with_labels_pd.vl.json", "pd_png": "scatter_with_labels_pd.png", "gpd_vl": "scatter_with_labels_gpd.vl.json", "result": "identical"}, "strip_plot": {"gpd_png": "strip_plot_gpd.png", "pd_vl": "strip_plot_pd.vl.json", "pd_png": "strip_plot_pd.png", "gpd_vl": "strip_plot_gpd.vl.json", "result": "identical"}, "poly_fit": {"gpd_png": "poly_fit_gpd.png", "pd_vl": "poly_fit_pd.vl.json", "gpd_vl": "poly_fit_gpd.vl.json", "pd_png": "poly_fit_pd.png", "result": "identical"}, "simple_bar_chart": {"gpd_png": "simple_bar_chart_gpd.png", "pd_vl": "simple_bar_chart_pd.vl.json", "gpd_vl": "simple_bar_chart_gpd.vl.json", "pd_png": "simple_bar_chart_pd.png", "result": "identical"}, "simple_line_chart": {"gpd_png": "simple_line_chart_gpd.png", "pd_vl": "simple_line_chart_pd.vl.json", "gpd_vl": "simple_line_chart_gpd.vl.json", "pd_png": "simple_line_chart_pd.png", "result": "identical"}, "simple_stacked_area_chart": {"result": "no_pandas"}, "diverging_stacked_bar_chart": {"error": "Traceback (most recent call last):\n  File \"/Users/tim/PycharmProjects/altair_project/run_app.py\", line 24, in <module>\n    test_geopandas_examples(fn, rep_path)\n  File \"/Users/tim/PycharmProjects/altair_project/altair/altair/utils/tests/test_geo_examples.py\", line 202, in test_geopandas_examples\n    assert same_img\nAssertionError\n", "gpd_vl": "diverging_stacked_bar_chart_gpd.vl.json", "result": "different", "gpd_png": "diverging_stacked_bar_chart_gpd.png", "pd_vl": "diverging_stacked_bar_chart_pd.vl.json", "pd_png": "diverging_stacked_bar_chart_pd.png"}, "multiline_highlight": {"result": "no_pandas"}, "bar_chart_with_labels": {"gpd_png": "bar_chart_with_labels_gpd.png", "pd_vl": "bar_chart_with_labels_pd.vl.json", "pd_png": "bar_chart_with_labels_pd.png", "gpd_vl": "bar_chart_with_labels_gpd.vl.json", "result": "identical"}, "beckers_barley_trellis_plot": {"error": "Traceback (most recent call last):\n  File \"/Users/tim/PycharmProjects/altair_project/run_app.py\", line 24, in <module>\n    test_geopandas_examples(fn, rep_path)\n  File \"/Users/tim/PycharmProjects/altair_project/altair/altair/utils/tests/test_geo_examples.py\", line 202, in test_geopandas_examples\n    assert same_img\nAssertionError\n", "gpd_vl": "beckers_barley_trellis_plot_gpd.vl.json", "result": "different", "gpd_png": "beckers_barley_trellis_plot_gpd.png", "pd_vl": "beckers_barley_trellis_plot_pd.vl.json", "pd_png": "beckers_barley_trellis_plot_pd.png"}, "one_dot_per_zipcode": {"result": "no_pandas"}, "us_state_capitals": {"result": "no_pandas"}, "step_chart": {"error": "Traceback (most recent call last):\n  File \"/Users/tim/PycharmProjects/altair_project/run_app.py\", line 24, in <module>\n    test_geopandas_examples(fn, rep_path)\n  File \"/Users/tim/PycharmProjects/altair_project/altair/altair/utils/tests/test_geo_examples.py\", line 202, in test_geopandas_examples\n    assert same_img\nAssertionError\n", "pd_png": "step_chart_pd.png", "result": "different", "gpd_png": "step_chart_gpd.png", "pd_vl": "step_chart_pd.vl.json", "gpd_vl": "step_chart_gpd.vl.json"}, "horizontal_stacked_bar_chart": {"error": "Traceback (most recent call last):\n  File \"/Users/tim/PycharmProjects/altair_project/run_app.py\", line 24, in <module>\n    test_geopandas_examples(fn, rep_path)\n  File \"/Users/tim/PycharmProjects/altair_project/altair/altair/utils/tests/test_geo_examples.py\", line 202, in test_geopandas_examples\n    assert same_img\nAssertionError\n", "gpd_vl": "horizontal_stacked_bar_chart_gpd.vl.json", "result": "different", "gpd_png": "horizontal_stacked_bar_chart_gpd.png", "pd_vl": "horizontal_stacked_bar_chart_pd.vl.json", "pd_png": "horizontal_stacked_bar_chart_pd.png"}, "interactive_cross_highlight": {"result": "no_pandas"}, "grouped_bar_chart": {"result": "no_pandas"}, "scatter_marginal_hist": {"error": "Traceback (most recent call last):\n  File \"/Users/tim/PycharmProjects/altair_project/run_app.py\", line 24, in <module>\n    test_geopandas_examples(fn, rep_path)\n  File \"/Users/tim/PycharmProjects/altair_project/altair/altair/utils/tests/test_geo_examples.py\", line 202, in test_geopandas_examples\n    assert same_img\nAssertionError\n", "pd_png": "scatter_marginal_hist_pd.png", "result": "different", "gpd_png": "scatter_marginal_hist_gpd.png", "pd_vl": "scatter_marginal_hist_pd.vl.json", "gpd_vl": "scatter_marginal_hist_gpd.vl.json"}, "trellis_scatter_plot": {"result": "no_pandas"}, "horizon_graph": {"error": "Traceback (most recent call last):\n  File \"/Users/tim/PycharmProjects/altair_project/run_app.py\", line 24, in <module>\n    test_geopandas_examples(fn, rep_path)\n  File \"/Users/tim/PycharmProjects/altair_project/altair/altair/utils/tests/test_geo_examples.py\", line 202, in test_geopandas_examples\n    assert same_img\nAssertionError\n", "pd_png": "horizon_graph_pd.png", "result": "different", "gpd_png": "horizon_graph_gpd.png", "pd_vl": "horizon_graph_pd.vl.json", "gpd_vl": "horizon_graph_gpd.vl.json"}, "multifeature_scatter_plot": {"gpd_png": "multifeature_scatter_plot_gpd.png", "pd_vl": "multifeature_scatter_plot_pd.vl.json", "gpd_vl": "multifeature_scatter_plot_gpd.vl.json", "pd_png": "multifeature_scatter_plot_pd.png", "result": "identical"}, "percentage_of_total": {"error": "Traceback (most recent call last):\n  File \"/Users/tim/PycharmProjects/altair_project/run_app.py\", line 24, in <module>\n    test_geopandas_examples(fn, rep_path)\n  File \"/Users/tim/PycharmProjects/altair_project/altair/altair/utils/tests/test_geo_examples.py\", line 202, in test_geopandas_examples\n    assert same_img\nAssertionError\n", "gpd_vl": "percentage_of_total_gpd.vl.json", "result": "different", "gpd_png": "percentage_of_total_gpd.png", "pd_vl": "percentage_of_total_pd.vl.json", "pd_png": "percentage_of_total_pd.png"}, "interval_selection": {"result": "no_pandas"}, "bubble_plot": {"gpd_png": "bubble_plot_gpd.png", "pd_vl": "bubble_plot_pd.vl.json", "gpd_vl": "bubble_plot_gpd.vl.json", "pd_png": "bubble_plot_pd.png", "result": "identical"}, "binned_scatterplot": {"result": "no_pandas"}, "multiline_tooltip": {"gpd_png": "multiline_tooltip_gpd.png", "pd_vl": "multiline_tooltip_pd.vl.json", "gpd_vl": "multiline_tooltip_gpd.vl.json", "pd_png": "multiline_tooltip_pd.png", "result": "identical"}, "selection_layer_bar_month": {"result": "no_pandas"}, "candlestick_chart": {"error": "Traceback (most recent call last):\n  File \"/Users/tim/PycharmProjects/altair_project/run_app.py\", line 24, in <module>\n    test_geopandas_examples(fn, rep_path)\n  File \"/Users/tim/PycharmProjects/altair_project/altair/altair/utils/tests/test_geo_examples.py\", line 202, in test_geopandas_examples\n    assert same_img\nAssertionError\n", "pd_png": "candlestick_chart_pd.png", "result": "different", "gpd_png": "candlestick_chart_gpd.png", "pd_vl": "candlestick_chart_pd.vl.json", "gpd_vl": "candlestick_chart_gpd.vl.json"}, "anscombe_plot": {"error": "Traceback (most recent call last):\n  File \"/Users/tim/PycharmProjects/altair_project/run_app.py\", line 24, in <module>\n    test_geopandas_examples(fn, rep_path)\n  File \"/Users/tim/PycharmProjects/altair_project/altair/altair/utils/tests/test_geo_examples.py\", line 202, in test_geopandas_examples\n    assert same_img\nAssertionError\n", "gpd_vl": "anscombe_plot_gpd.vl.json", "result": "different", "gpd_png": "anscombe_plot_gpd.png", "pd_vl": "anscombe_plot_pd.vl.json", "pd_png": "anscombe_plot_pd.png"}, "seattle_weather_interactive": {"result": "no_pandas"}, "stem_and_leaf": {"error": "Traceback (most recent call last):\n  File \"/Users/tim/PycharmProjects/altair_project/run_app.py\", line 24, in <module>\n    test_geopandas_examples(fn, rep_path)\n  File \"/Users/tim/PycharmProjects/altair_project/altair/altair/utils/tests/test_geo_examples.py\", line 202, in test_geopandas_examples\n    assert same_img\nAssertionError\n", "gpd_vl": "stem_and_leaf_gpd.vl.json", "result": "different", "gpd_png": "stem_and_leaf_gpd.png", "pd_vl": "stem_and_leaf_pd.vl.json", "pd_png": "stem_and_leaf_pd.png"}, "normalized_stacked_bar_chart": {"result": "no_pandas"}, "connected_scatterplot": {"gpd_png": "connected_scatterplot_gpd.png", "pd_vl": "connected_scatterplot_pd.vl.json", "pd_png": "connected_scatterplot_pd.png", "gpd_vl": "connected_scatterplot_gpd.vl.json", "result": "identical"}, "boxplot_max_min": {"result": "no_pandas"}, "airports": {"result": "no_pandas"}, "london_tube": {"result": "no_pandas"}, "simple_heatmap": {"gpd_png": "simple_heatmap_gpd.png", "pd_vl": "simple_heatmap_pd.vl.json", "gpd_vl": "simple_heatmap_gpd.vl.json", "pd_png": "simple_heatmap_pd.png", "result": "identical"}, "multiple_marks": {"error": "Traceback (most recent call last):\n  File \"/Users/tim/PycharmProjects/altair_project/run_app.py\", line 24, in <module>\n    test_geopandas_examples(fn, rep_path)\n  File \"/Users/tim/PycharmProjects/altair_project/altair/altair/utils/tests/test_geo_examples.py\", line 202, in test_geopandas_examples\n    assert same_img\nAssertionError\n", "pd_png": "multiple_marks_pd.png", "result": "different", "gpd_png": "multiple_marks_gpd.png", "pd_vl": "multiple_marks_pd.vl.json", "gpd_vl": "multiple_marks_gpd.vl.json"}, "gantt_chart": {"error": "Traceback (most recent call last):\n  File \"/Users/tim/PycharmProjects/altair_project/run_app.py\", line 24, in <module>\n    test_geopandas_examples(fn, rep_path)\n  File \"/Users/tim/PycharmProjects/altair_project/altair/altair/utils/tests/test_geo_examples.py\", line 202, in test_geopandas_examples\n    assert same_img\nAssertionError\n", "gpd_vl": "gantt_chart_gpd.vl.json", "result": "different", "gpd_png": "gantt_chart_gpd.png", "pd_vl": "gantt_chart_pd.vl.json", "pd_png": "gantt_chart_pd.png"}, "histogram_with_a_global_mean_overlay": {"result": "no_pandas"}, "ranged_dot_plot": {"result": "no_pandas"}, "trail_marker": {"result": "no_pandas"}, "binned_heatmap": {"result": "no_pandas"}, "line_with_ci": {"error": "Traceback (most recent call last):\n  File \"/Users/tim/PycharmProjects/altair_project/run_app.py\", line 24, in <module>\n    test_geopandas_examples(fn, rep_path)\n  File \"/Users/tim/PycharmProjects/altair_project/altair/altair/utils/tests/test_geo_examples.py\", line 202, in test_geopandas_examples\n    assert same_img\nAssertionError\n", "gpd_vl": "line_with_ci_gpd.vl.json", "result": "different", "gpd_png": "line_with_ci_gpd.png", "pd_vl": "line_with_ci_pd.vl.json", "pd_png": "line_with_ci_pd.png"}, "layered_heatmap_text": {"result": "no_pandas"}, "us_population_over_time": {"result": "no_pandas"}, "interactive_brush": {"result": "no_pandas"}, "interactive_scatter_plot": {"gpd_png": "interactive_scatter_plot_gpd.png", "pd_vl": "interactive_scatter_plot_pd.vl.json", "gpd_vl": "interactive_scatter_plot_gpd.vl.json", "pd_png": "interactive_scatter_plot_pd.png", "result": "identical"}, "gapminder_bubble_plot": {"result": "no_pandas"}, "stacked_bar_chart": {"error": "Traceback (most recent call last):\n  File \"/Users/tim/PycharmProjects/altair_project/run_app.py\", line 24, in <module>\n    test_geopandas_examples(fn, rep_path)\n  File \"/Users/tim/PycharmProjects/altair_project/altair/altair/utils/tests/test_geo_examples.py\", line 202, in test_geopandas_examples\n    assert same_img\nAssertionError\n", "pd_png": "stacked_bar_chart_pd.png", "result": "different", "gpd_png": "stacked_bar_chart_gpd.png", "pd_vl": "stacked_bar_chart_pd.vl.json", "gpd_vl": "stacked_bar_chart_gpd.vl.json"}, "select_detail": {"error": "Traceback (most recent call last):\n  File \"/Users/tim/PycharmProjects/altair_project/run_app.py\", line 24, in <module>\n    test_geopandas_examples(fn, rep_path)\n  File \"/Users/tim/PycharmProjects/altair_project/altair/altair/utils/tests/test_geo_examples.py\", line 202, in test_geopandas_examples\n    assert same_img\nAssertionError\n", "gpd_vl": "select_detail_gpd.vl.json", "result": "different", "gpd_png": "select_detail_gpd.png", "pd_vl": "select_detail_pd.vl.json", "pd_png": "select_detail_pd.png"}, "scatter_linked_brush": {"gpd_png": "scatter_linked_brush_gpd.png", "pd_vl": "scatter_linked_brush_pd.vl.json", "gpd_vl": "scatter_linked_brush_gpd.vl.json", "pd_png": "scatter_linked_brush_pd.png", "result": "identical"}, "choropleth_repeat": {"result": "no_pandas"}, "mean_overlay_over_precipitiation_chart": {"error": "Traceback (most recent call last):\n  File \"/Users/tim/PycharmProjects/altair_project/run_app.py\", line 24, in <module>\n    test_geopandas_examples(fn, rep_path)\n  File \"/Users/tim/PycharmProjects/altair_project/altair/altair/utils/tests/test_geo_examples.py\", line 202, in test_geopandas_examples\n    assert same_img\nAssertionError\n", "pd_png": "mean_overlay_over_precipitiation_chart_pd.png", "result": "different", "gpd_png": "mean_overlay_over_precipitiation_chart_gpd.png", "pd_vl": "mean_overlay_over_precipitiation_chart_pd.vl.json", "gpd_vl": "mean_overlay_over_precipitiation_chart_gpd.vl.json"}, "falkensee": {"error": "Traceback (most recent call last):\n  File \"/Users/tim/PycharmProjects/altair_project/run_app.py\", line 24, in <module>\n    test_geopandas_examples(fn, rep_path)\n  File \"/Users/tim/PycharmProjects/altair_project/altair/altair/utils/tests/test_geo_examples.py\", line 202, in test_geopandas_examples\n    assert same_img\nAssertionError\n", "pd_png": "falkensee_pd.png", "result": "different", "gpd_png": "falkensee_gpd.png", "pd_vl": "falkensee_pd.vl.json", "gpd_vl": "falkensee_gpd.vl.json"}, "slope_graph": {"error": "Traceback (most recent call last):\n  File \"/Users/tim/PycharmProjects/altair_project/run_app.py\", line 24, in <module>\n    test_geopandas_examples(fn, rep_path)\n  File \"/Users/tim/PycharmProjects/altair_project/altair/altair/utils/tests/test_geo_examples.py\", line 202, in test_geopandas_examples\n    assert same_img\nAssertionError\n", "gpd_vl": "slope_graph_gpd.vl.json", "result": "different", "gpd_png": "slope_graph_gpd.png", "pd_vl": "slope_graph_pd.vl.json", "pd_png": "slope_graph_pd.png"}, "cumulative_wiki_donations": {"result": "no_pandas"}, "dot_dash_plot": {"error": "Traceback (most recent call last):\n  File \"/Users/tim/PycharmProjects/altair_project/run_app.py\", line 24, in <module>\n    test_geopandas_examples(fn, rep_path)\n  File \"/Users/tim/PycharmProjects/altair_project/altair/altair/utils/tests/test_geo_examples.py\", line 202, in test_geopandas_examples\n    assert same_img\nAssertionError\n", "pd_png": "dot_dash_plot_pd.png", "result": "different", "gpd_png": "dot_dash_plot_gpd.png", "pd_vl": "dot_dash_plot_pd.vl.json", "gpd_vl": "dot_dash_plot_gpd.vl.json"}, "layered_plot_with_dual_axis": {"error": "Traceback (most recent call last):\n  File \"/Users/tim/PycharmProjects/altair_project/run_app.py\", line 24, in <module>\n    test_geopandas_examples(fn, rep_path)\n  File \"/Users/tim/PycharmProjects/altair_project/altair/altair/utils/tests/test_geo_examples.py\", line 202, in test_geopandas_examples\n    assert same_img\nAssertionError\n", "pd_png": "layered_plot_with_dual_axis_pd.png", "result": "different", "gpd_png": "layered_plot_with_dual_axis_gpd.png", "pd_vl": "layered_plot_with_dual_axis_pd.vl.json", "gpd_vl": "layered_plot_with_dual_axis_gpd.vl.json"}, "aggregate_bar_chart": {"result": "no_pandas"}, "trellis_area": {"error": "Traceback (most recent call last):\n  File \"/Users/tim/PycharmProjects/altair_project/run_app.py\", line 24, in <module>\n    test_geopandas_examples(fn, rep_path)\n  File \"/Users/tim/PycharmProjects/altair_project/altair/altair/utils/tests/test_geo_examples.py\", line 202, in test_geopandas_examples\n    assert same_img\nAssertionError\n", "gpd_vl": "trellis_area_gpd.vl.json", "result": "different", "gpd_png": "trellis_area_gpd.png", "pd_vl": "trellis_area_pd.vl.json", "pd_png": "trellis_area_pd.png"}, "interactive_layered_crossfilter": {"result": "no_pandas"}, "layer_line_color_rule": {"error": "Traceback (most recent call last):\n  File \"/Users/tim/PycharmProjects/altair_project/run_app.py\", line 24, in <module>\n    test_geopandas_examples(fn, rep_path)\n  File \"/Users/tim/PycharmProjects/altair_project/altair/altair/utils/tests/test_geo_examples.py\", line 202, in test_geopandas_examples\n    assert same_img\nAssertionError\n", "pd_png": "layer_line_color_rule_pd.png", "result": "different", "gpd_png": "layer_line_color_rule_gpd.png", "pd_vl": "layer_line_color_rule_pd.vl.json", "gpd_vl": "layer_line_color_rule_gpd.vl.json"}, "choropleth": {"result": "no_pandas"}, "simple_histogram": {"result": "no_pandas"}, "line_percent": {"result": "no_pandas"}, "selection_histogram": {"result": "no_pandas"}, "trellis_histogram": {"error": "Traceback (most recent call last):\n  File \"/Users/tim/PycharmProjects/altair_project/run_app.py\", line 24, in <module>\n    test_geopandas_examples(fn, rep_path)\n  File \"/Users/tim/PycharmProjects/altair_project/altair/altair/utils/tests/test_geo_examples.py\", line 189, in test_geopandas_examples\n    img[pref] =  get_image_file(chart)\n  File \"/Users/tim/PycharmProjects/altair_project/altair/altair/utils/tests/test_geo_examples.py\", line 132, in get_image_file\n    chart.save(out, format='png')\n  File \"/Users/tim/PycharmProjects/altair_project/altair/altair/vegalite/v2/api.py\", line 408, in save\n    result = save(**kwds)\n  File \"/Users/tim/PycharmProjects/altair_project/altair/altair/utils/save.py\", line 90, in save\n    webdriver=webdriver)\n  File \"/Users/tim/PycharmProjects/altair_project/altair/altair/utils/mimebundle.py\", line 56, in spec_to_mimebundle\n    vegalite_version=vegalite_version, **kwargs)\n  File \"/Users/tim/PycharmProjects/altair_project/altair/altair/utils/headless.py\", line 167, in compile_spec\n    spec, mode)\n  File \"/Users/tim/anaconda/anaconda/envs/alt_dev/lib/python3.5/site-packages/selenium/webdriver/remote/webdriver.py\", line 650, in execute_async_script\n    'args': converted_args})['value']\n  File \"/Users/tim/anaconda/anaconda/envs/alt_dev/lib/python3.5/site-packages/selenium/webdriver/remote/webdriver.py\", line 312, in execute\n    self.error_handler.check_response(response)\n  File \"/Users/tim/anaconda/anaconda/envs/alt_dev/lib/python3.5/site-packages/selenium/webdriver/remote/errorhandler.py\", line 242, in check_response\n    raise exception_class(message, screen, stacktrace)\nselenium.common.exceptions.TimeoutException: Message: asynchronous script timeout: result was not received in 30 seconds\n  (Session info: headless chrome=66.0.3359.139)\n  (Driver info: chromedriver=2.36.540469 (1881fd7f8641508feb5166b7cae561d87723cfa8),platform=Mac OS X 10.13.4 x86_64)\n\n", "gpd_vl": "trellis_histogram_gpd.vl.json", "result": "fail"}, "trellis_stacked_bar_chart": {"error": "Traceback (most recent call last):\n  File \"/Users/tim/PycharmProjects/altair_project/run_app.py\", line 24, in <module>\n    test_geopandas_examples(fn, rep_path)\n  File \"/Users/tim/PycharmProjects/altair_project/altair/altair/utils/tests/test_geo_examples.py\", line 202, in test_geopandas_examples\n    assert same_img\nAssertionError\n", "gpd_vl": "trellis_stacked_bar_chart_gpd.vl.json", "result": "different", "gpd_png": "trellis_stacked_bar_chart_gpd.png", "pd_vl": "trellis_stacked_bar_chart_pd.vl.json", "pd_png": "trellis_stacked_bar_chart_pd.png"}, "table_bubble_plot_github": {"result": "no_pandas"}, "bar_chart_with_highlight": {"error": "Traceback (most recent call last):\n  File \"/Users/tim/PycharmProjects/altair_project/run_app.py\", line 24, in <module>\n    test_geopandas_examples(fn, rep_path)\n  File \"/Users/tim/PycharmProjects/altair_project/altair/altair/utils/tests/test_geo_examples.py\", line 189, in test_geopandas_examples\n    img[pref] =  get_image_file(chart)\n  File \"/Users/tim/PycharmProjects/altair_project/altair/altair/utils/tests/test_geo_examples.py\", line 132, in get_image_file\n    chart.save(out, format='png')\n  File \"/Users/tim/PycharmProjects/altair_project/altair/altair/vegalite/v2/api.py\", line 408, in save\n    result = save(**kwds)\n  File \"/Users/tim/PycharmProjects/altair_project/altair/altair/utils/save.py\", line 90, in save\n    webdriver=webdriver)\n  File \"/Users/tim/PycharmProjects/altair_project/altair/altair/utils/mimebundle.py\", line 56, in spec_to_mimebundle\n    vegalite_version=vegalite_version, **kwargs)\n  File \"/Users/tim/PycharmProjects/altair_project/altair/altair/utils/headless.py\", line 167, in compile_spec\n    spec, mode)\n  File \"/Users/tim/anaconda/anaconda/envs/alt_dev/lib/python3.5/site-packages/selenium/webdriver/remote/webdriver.py\", line 650, in execute_async_script\n    'args': converted_args})['value']\n  File \"/Users/tim/anaconda/anaconda/envs/alt_dev/lib/python3.5/site-packages/selenium/webdriver/remote/webdriver.py\", line 312, in execute\n    self.error_handler.check_response(response)\n  File \"/Users/tim/anaconda/anaconda/envs/alt_dev/lib/python3.5/site-packages/selenium/webdriver/remote/errorhandler.py\", line 242, in check_response\n    raise exception_class(message, screen, stacktrace)\nselenium.common.exceptions.JavascriptException: Message: javascript error: It should never reach here\nJavaScript stack:\nError: It should never reach here\n    at lo (https://cdn.jsdelivr.net/npm/vega-lite@2.4.1:1:58509)\n    at https://cdn.jsdelivr.net/npm/vega-lite@2.4.1:1:145572\n    at _o (https://cdn.jsdelivr.net/npm/vega-lite@2.4.1:1:62260)\n    at e (https://cdn.jsdelivr.net/npm/vega-lite@2.4.1:1:145475)\n    at ps (https://cdn.jsdelivr.net/npm/vega-lite@2.4.1:1:145722)\n    at ds (https://cdn.jsdelivr.net/npm/vega-lite@2.4.1:1:145411)\n    at https://cdn.jsdelivr.net/npm/vega-lite@2.4.1:1:159712\n    at l.parseAxisAndHeader (https://cdn.jsdelivr.net/npm/vega-lite@2.4.1:1:160195)\n    at l.e.parse (https://cdn.jsdelivr.net/npm/vega-lite@2.4.1:1:105404)\n    at Object.e.compile (https://cdn.jsdelivr.net/npm/vega-lite@2.4.1:1:164341)\n  (Session info: headless chrome=66.0.3359.139)\n  (Driver info: chromedriver=2.36.540469 (1881fd7f8641508feb5166b7cae561d87723cfa8),platform=Mac OS X 10.13.4 x86_64)\n\n", "gpd_vl": "bar_chart_with_highlight_gpd.vl.json", "result": "fail"}, "simple_scatter": {"gpd_png": "simple_scatter_gpd.png", "pd_vl": "simple_scatter_pd.vl.json", "gpd_vl": "simple_scatter_gpd.vl.json", "pd_png": "simple_scatter_pd.png", "result": "identical"}, "layered_histogram": {"error": "Traceback (most recent call last):\n  File \"/Users/tim/PycharmProjects/altair_project/run_app.py\", line 24, in <module>\n    test_geopandas_examples(fn, rep_path)\n  File \"/Users/tim/PycharmProjects/altair_project/altair/altair/utils/tests/test_geo_examples.py\", line 189, in test_geopandas_examples\n    img[pref] =  get_image_file(chart)\n  File \"/Users/tim/PycharmProjects/altair_project/altair/altair/utils/tests/test_geo_examples.py\", line 132, in get_image_file\n    chart.save(out, format='png')\n  File \"/Users/tim/PycharmProjects/altair_project/altair/altair/vegalite/v2/api.py\", line 408, in save\n    result = save(**kwds)\n  File \"/Users/tim/PycharmProjects/altair_project/altair/altair/utils/save.py\", line 90, in save\n    webdriver=webdriver)\n  File \"/Users/tim/PycharmProjects/altair_project/altair/altair/utils/mimebundle.py\", line 56, in spec_to_mimebundle\n    vegalite_version=vegalite_version, **kwargs)\n  File \"/Users/tim/PycharmProjects/altair_project/altair/altair/utils/headless.py\", line 167, in compile_spec\n    spec, mode)\n  File \"/Users/tim/anaconda/anaconda/envs/alt_dev/lib/python3.5/site-packages/selenium/webdriver/remote/webdriver.py\", line 650, in execute_async_script\n    'args': converted_args})['value']\n  File \"/Users/tim/anaconda/anaconda/envs/alt_dev/lib/python3.5/site-packages/selenium/webdriver/remote/webdriver.py\", line 312, in execute\n    self.error_handler.check_response(response)\n  File \"/Users/tim/anaconda/anaconda/envs/alt_dev/lib/python3.5/site-packages/selenium/webdriver/remote/errorhandler.py\", line 242, in check_response\n    raise exception_class(message, screen, stacktrace)\nselenium.common.exceptions.TimeoutException: Message: asynchronous script timeout: result was not received in 30 seconds\n  (Session info: headless chrome=66.0.3359.139)\n  (Driver info: chromedriver=2.36.540469 (1881fd7f8641508feb5166b7cae561d87723cfa8),platform=Mac OS X 10.13.4 x86_64)\n\n", "gpd_vl": "layered_histogram_gpd.vl.json", "result": "fail"}, "scatter_matrix": {"result": "no_pandas"}, "streamgraph": {"result": "no_pandas"}, "world_projections": {"result": "no_pandas"}, "layered_bar_chart": {"result": "no_pandas"}, "timestamp": "2018-05-14 00:34:01.602425", "simple_scatter_with_errorbars": {"error": "Traceback (most recent call last):\n  File \"/Users/tim/PycharmProjects/altair_project/run_app.py\", line 24, in <module>\n    test_geopandas_examples(fn, rep_path)\n  File \"/Users/tim/PycharmProjects/altair_project/altair/altair/utils/tests/test_geo_examples.py\", line 202, in test_geopandas_examples\n    assert same_img\nAssertionError\n", "pd_png": "simple_scatter_with_errorbars_pd.png", "result": "different", "gpd_png": "simple_scatter_with_errorbars_gpd.png", "pd_vl": "simple_scatter_with_errorbars_pd.vl.json", "gpd_vl": "simple_scatter_with_errorbars_gpd.vl.json"}, "multi_series_line": {"error": "Traceback (most recent call last):\n  File \"/Users/tim/PycharmProjects/altair_project/run_app.py\", line 24, in <module>\n    test_geopandas_examples(fn, rep_path)\n  File \"/Users/tim/PycharmProjects/altair_project/altair/altair/utils/tests/test_geo_examples.py\", line 202, in test_geopandas_examples\n    assert same_img\nAssertionError\n", "gpd_vl": "multi_series_line_gpd.vl.json", "result": "different", "gpd_png": "multi_series_line_gpd.png", "pd_vl": "multi_series_line_pd.vl.json", "pd_png": "multi_series_line_pd.png"}, "layered_chart_bar_mark": {"gpd_png": "layered_chart_bar_mark_gpd.png", "pd_vl": "layered_chart_bar_mark_pd.vl.json", "pd_png": "layered_chart_bar_mark_pd.png", "gpd_vl": "layered_chart_bar_mark_gpd.vl.json", "result": "identical"}}